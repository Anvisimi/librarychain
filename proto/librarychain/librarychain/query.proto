syntax = "proto3";

package librarychain.librarychain;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "librarychain/librarychain/params.proto";
import "librarychain/librarychain/book.proto";

option go_package = "librarychain/x/librarychain/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/librarychain/librarychain/params";
  
  }
  
  // Queries a list of Book items.
  rpc Book    (QueryGetBookRequest) returns (QueryGetBookResponse) {
    option (google.api.http).get = "/librarychain/librarychain/book/{id}";
  
  }
  rpc BookAll (QueryAllBookRequest) returns (QueryAllBookResponse) {
    option (google.api.http).get = "/librarychain/librarychain/book";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

message QueryGetBookRequest {
  uint64 id = 1;
}

message QueryGetBookResponse {
  Book Book = 1 [(gogoproto.nullable) = false];
}

message QueryAllBookRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllBookResponse {
  repeated Book                                   Book       = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

